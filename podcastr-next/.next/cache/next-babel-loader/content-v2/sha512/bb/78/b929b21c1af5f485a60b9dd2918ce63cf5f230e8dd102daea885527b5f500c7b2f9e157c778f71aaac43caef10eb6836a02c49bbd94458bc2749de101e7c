{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Desktop\\\\Git\\\\React-Trail\\\\podcastr-next\\\\src\\\\pages\\\\episode\\\\[slug].tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nimport { api } from '../../services/api';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport styles from './episode.module.scss';\nexport default function Episode({\n  episode\n}) {\n  const router = useRouter();\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/arrow-left.svg\",\n            alt: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: \"Tocar epis\\xF3dio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.publishedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.durationAsString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      dangerouslySetInnerHTML: {\n        __html: episode.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  const {\n    data\n  } = await api.get('episode', {\n    params: {\n      _limit: 2,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const paths = data.map(episode => {\n    return {\n      params: {\n        slug: episode.id\n      }\n    };\n  });\n  return {\n    paths: [],\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episode/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    url: data.file.url,\n    description: data.description\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24\n  };\n};","map":{"version":3,"sources":["C:/Users/bruno/Desktop/Git/React-Trail/podcastr-next/src/pages/episode/[slug].tsx"],"names":["format","parseISO","ptBR","convertDurationToTimeString","api","Image","Link","useRouter","styles","Episode","episode","router","isFallback","thumbnailContainer","thumbnail","title","members","publishedAt","durationAsString","description","__html","getStaticPaths","data","get","params","_limit","_sort","_order","paths","map","slug","id","fallback","getStaticProps","ctx","published_at","locale","duration","Number","file","url","props","revalidate"],"mappings":"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","sourcesContent":["import { GetStaticProps, GetStaticPaths } from 'next';\r\nimport { format, parseISO } from 'date-fns';\r\nimport ptBR from 'date-fns/locale/pt-BR';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\nimport { api } from '../../services/api';\r\nimport Image from 'next/image';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport styles from './episode.module.scss';\r\n\r\ntype Episode = {\r\n    id: string;\r\n    title: string;\r\n    thumbnail: string;\r\n    members: string;\r\n    duration: number;\r\n    durationAsString: string;\r\n    url: string;\r\n    publishedAt: string;\r\n    description: string;\r\n}\r\n\r\ntype EpisodeProps = {\r\n    episode: Episode;\r\n}\r\n\r\nexport default function Episode({ episode }: EpisodeProps) {\r\n    const router = useRouter();\r\n\r\n    if (router.isFallback) {\r\n        return <p></p>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.episode}>\r\n            <div className={styles.thumbnailContainer}>\r\n                \r\n                <Link href=\"/\">\r\n                    <button type=\"button\">\r\n                        <img src=\"/arrow-left.svg\" alt=\"Voltar\"/>\r\n                    </button>\r\n                </Link>\r\n                \r\n                <Image \r\n                    width={700} \r\n                    height={160} \r\n                    src={episode.thumbnail}\r\n                    objectFit=\"cover\"\r\n                />\r\n                <button type=\"button\">\r\n                    <img src=\"/play.svg\" alt=\"Tocar episÃ³dio\"/>\r\n                </button>\r\n            </div>\r\n\r\n            <header>\r\n                <h1>{episode.title}</h1>\r\n                <span>{episode.members}</span>\r\n                <span>{episode.publishedAt}</span>\r\n                <span>{episode.durationAsString}</span>\r\n            </header>\r\n\r\n            <div className={styles.description}\r\n                dangerouslySetInnerHTML={{ __html: episode.description }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n    const { data } = await api.get('episode', {\r\n        params: {\r\n            _limit: 2,\r\n            _sort: 'published_at',\r\n            _order: 'desc'\r\n        }\r\n    })\r\n\r\n    const paths = data.map(episode => {\r\n        return {\r\n            params: {\r\n                slug: episode.id\r\n            }\r\n        }\r\n    })\r\n\r\n    return {\r\n        paths: \r\n        [],\r\n        fallback: 'blocking'\r\n    }\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async (ctx) => {\r\n    const { slug } = ctx.params;\r\n\r\n    const { data } = await api.get(`/episode/${slug}`)\r\n\r\n    const episode = {\r\n        id: data.id,\r\n        title: data.title,\r\n        thumbnail: data.thumbnail,\r\n        members: data.members,\r\n        publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR}),\r\n        duration: Number(data.file.duration),\r\n        durationAsString: convertDurationToTimeString(Number(data.file.duration)),\r\n        url: data.file.url,\r\n        description: data.description\r\n    }\r\n\r\n    return {\r\n        props: {\r\n            episode,\r\n        },\r\n        revalidate: 60 * 60 * 24,\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}